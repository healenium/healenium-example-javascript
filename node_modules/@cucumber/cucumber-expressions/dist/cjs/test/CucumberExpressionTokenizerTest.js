"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var fs_1 = __importDefault(require("fs"));
var js_yaml_1 = __importDefault(require("js-yaml"));
var CucumberExpressionError_js_1 = __importDefault(require("../src/CucumberExpressionError.js"));
var CucumberExpressionTokenizer_js_1 = __importDefault(require("../src/CucumberExpressionTokenizer.js"));
var testDataDir_js_1 = require("./testDataDir.js");
describe('Cucumber expression tokenizer', function () {
    fs_1.default.readdirSync(testDataDir_js_1.testDataDir + "/tokens").forEach(function (testcase) {
        var testCaseData = fs_1.default.readFileSync(testDataDir_js_1.testDataDir + "/tokens/" + testcase, 'utf-8');
        var expectation = js_yaml_1.default.load(testCaseData);
        it("" + testcase, function () {
            var tokenizer = new CucumberExpressionTokenizer_js_1.default();
            if (expectation.expected !== undefined) {
                var tokens = tokenizer.tokenize(expectation.expression);
                assert_1.default.deepStrictEqual(JSON.parse(JSON.stringify(tokens)), // Removes type information.
                JSON.parse(expectation.expected));
            }
            else if (expectation.exception !== undefined) {
                assert_1.default.throws(function () {
                    tokenizer.tokenize(expectation.expression);
                }, new CucumberExpressionError_js_1.default(expectation.exception));
            }
            else {
                throw new Error("Expectation must have expected or exception: " + JSON.stringify(expectation));
            }
        });
    });
});
//# sourceMappingURL=CucumberExpressionTokenizerTest.js.map